services:
  broker:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # TCP - messages between services
      - "15672:15672" # UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  tracer:
    image: jaegertracing/all-in-one:1.57
    ports:
      - "16686:16686"   # UI
      - "6831:6831/udp" # Traces UDP
      - "14268:14268"   # Traces HTTP
      - "4317:4317"     # OTLP/gRPC
      - "4318:4318"     # OTLP/HTTP

  api-gateway:
    # usage: docker compose up
    # V1: image, KONG_DECLARATIVE_CONFIG, volumes, config.yaml: build an image under the hood, and runs the container.
    # V2: build context, ORDERS_SERVICE_URL, config.template.yaml: build a standalone image, and runs a container with it.
    # In V1, I can have several services running in this same docker-compose.yaml file, for development;
    # In V2, each image should contain a single service, so it will make more sense to remove the other services from this docker-compose.yaml file.
    # image: kong:3.9                                 # moved to Dockerfile
    build:
      context: './docker/kong'                        # path to Dockerfile
    environment:
      KONG_DATABASE: "off"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_ADMIN_GUI_URL: http://localhost:8002
      # KONG_DECLARATIVE_CONFIG: "/kong/config.yaml"  # moved to startup.sh; path to config file inside container, as defined by "volumes" line below
      ORDERS_SERVICE_URL: http://host.docker.internal:3333  # used by config.template.yaml when called by Dockerfile
    extra_hosts:                                      # set my machine's localhost to Docker's localhost
      - "host.docker.internal:host-gateway"
    # volumes:                                        # moved to startup.sh;
    #   - "./docker/kong/config.yaml:/kong/config.yaml" # copy file from localhost -> container
    ports:
      - "8000:8000" # Proxy (API)
      - "8001:8001" # API (Admin)
      - "8002:8002" # UI (Admin)
      - "8443:8443" # Proxy SSL (HTTPs)
      - "8444:8444" # API (Admin) (HTTPs)

volumes:
  rabbitmq_data:
